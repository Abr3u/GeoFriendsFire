package pt.utl.ist.meic.geofriendsfire.activities;

import android.app.Activity;
import android.content.Intent;
import android.location.Location;
import android.os.Bundle;
import android.os.PersistableBundle;
import android.support.annotation.Nullable;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import com.firebase.geofire.GeoFire;
import com.firebase.geofire.GeoLocation;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

import org.parceler.Parcels;

import java.text.SimpleDateFormat;
import java.util.Date;

import butterknife.BindView;
import butterknife.ButterKnife;
import butterknife.OnClick;
import pt.utl.ist.meic.geofriendsfire.MyApplicationContext;
import pt.utl.ist.meic.geofriendsfire.R;
import pt.utl.ist.meic.geofriendsfire.fragments.BaseFragment;
import pt.utl.ist.meic.geofriendsfire.models.Event;
import pt.utl.ist.meic.geofriendsfire.utils.IntentKeys;

public class CreateEventActivity extends AppCompatActivity {

    private static final String PARCEL_DESCRIPTION = "description";
    private static final String PARCEL_CATEGORY = "category";

    private static final String EVENTS_REF = "/events";
    private static final String EVENTS_LOCATIONS_REF = "/eventsLocations";

    @BindView(R.id.categorySpinner)
    Spinner eventCategory;

    @BindView(R.id.eventDescription)
    TextView eventDescription;

    private DatabaseReference mDatabase;


    @Override
    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_create_event);

        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        ButterKnife.bind(this);
        mDatabase = FirebaseDatabase.getInstance().getReference();

        if(savedInstanceState != null){
            eventDescription.setText(Parcels.unwrap(savedInstanceState.getParcelable(PARCEL_DESCRIPTION)));
            eventCategory.setSelection(Integer.parseInt(Parcels.unwrap(savedInstanceState.getParcelable(PARCEL_CATEGORY))));
        }
    }

    @OnClick(R.id.createEventButton)
    public void createNewEventButtonClicked() {

        Location lastKnowLocation =
                MyApplicationContext.getLocationsServiceInstance().getLastKnownLocation();

        if (lastKnowLocation == null) {
            Toast.makeText(this, "can not get location", Toast.LENGTH_LONG).show();
        }else if(eventDescription.getText().toString().trim().isEmpty()){
            Toast.makeText(this, "plz provide an event description", Toast.LENGTH_SHORT).show();
        }
        else {
            double latitude = lastKnowLocation.getLatitude();
            double longitude = lastKnowLocation.getLongitude();
            String category = String.valueOf(eventCategory.getSelectedItem());
            String description = eventDescription.getText().toString().trim();

            SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
            String creationDate = df.format(new Date());

            String myId = MyApplicationContext.getInstance().getFirebaseUser().getUid();
            String myName = MyApplicationContext.getInstance().getFirebaseUser().getDisplayName();

            Event newEvent = new Event(myId,myName,description ,category,creationDate);

            // Generate a reference to a new location and add some data using push()
            DatabaseReference eventsRef = mDatabase.child(EVENTS_REF);
            DatabaseReference newEventRef = eventsRef.push();

            // Add some data to the new location
            newEventRef.setValue(newEvent.toMap());

            // Get the unique ID generated by push()
            String eventID = newEventRef.getKey();
            newEvent.ref = eventID;
            newEvent.latitude = latitude;
            newEvent.longitude = longitude;

            //create geoLocation for the event - key is the event ID
            DatabaseReference ref = mDatabase.child(EVENTS_LOCATIONS_REF);
            GeoFire geoFire = new GeoFire(ref);
            geoFire.setLocation(eventID, new GeoLocation(latitude, longitude));

            Intent i = new Intent();
            setResult(Activity.RESULT_OK,i);
            finish();
        }
    }

    @Override
    public void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);
        outState.putParcelable(PARCEL_DESCRIPTION, Parcels.wrap(eventDescription.getText().toString().trim()));
        outState.putParcelable(PARCEL_CATEGORY, Parcels.wrap(""+eventCategory.getSelectedItemId()));
    }
}
